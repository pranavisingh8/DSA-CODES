## Binary search recursive with passes:
#include <iostream>
using namespace std;

void binarySearch(int arr[], int low, int high, int key, int pass) {
    if (low > high) {
        cout << "Key not found in the array." << endl;
        return;
    }

    int mid = (low + high) / 2;

    // Print the current pass information
    cout << "Pass " << pass << ": Low = " << low << ", High = " << high << ", Mid = " << mid << endl;

    if (arr[mid] == key) {
        cout << "Key found at index " << mid << " in pass " << pass << "." << endl;
        return;
    }
    else if (arr[mid] > key) {
        binarySearch(arr, low, mid - 1, key, pass + 1);
    }
    else {
        binarySearch(arr, mid + 1, high, key, pass + 1);
    }
}

int main() {
    int n;
    cout << "Enter the number of elements in the array: ";
    cin >> n;

    int arr[n];
    cout << "Enter " << n << " elements in sorted order:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    int key;
    cout << "Enter the key to search for: ";
    cin >> key;

    binarySearch(arr, 0, n - 1, key, 1);

    return 0;
}
