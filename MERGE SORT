## Merge sort with printing of passes
etryuiop
#include <iostream>
using namespace std;

void merge(int arr[], int l, int m, int r) {
    int i,j,k,n1=m-l+1,n2=r-m, L[n1],R[n2];
    for(i=0; i<n1;i++){
        L[i]=arr[l+i];
    }
    for(j=0; j<n2;j++){
        R[j]=arr[m+j+1];
    }
    i=0,j=0,k=l;
    while(i<n1 && j<n2){
        if(L[i]<=R[j]){
            arr[k]=L[i];
            i++;
        }
        else
        {
            arr[k]=R[j];
            j++;
        }
        k++;
    }
    while(i<n1){
        arr[k]=L[i];
        i++;k++;
    }
    while(j<n2){
        arr[k]=R[j];
        j++;k++;
    }
    cout << "Merged: ";
    for (int i = l; i <= r; i++)
        cout << arr[i] << " ";
    cout << endl;
}
void mergesort(int arr[], int l, int r){
    if(l<r){
        int m=(r+l)/2;
        
        mergesort(arr,l,m);
        mergesort(arr,m+1,r);
        merge(arr,l,m,r);
    }
}
int main() {
    int n;
    cout << "Enter the number of elements in the array: ";
    cin >> n;
    int arr[n];
    
    cout << "pls enter elements ";
    for (int i = 0; i < n; i++)
        cin >> arr[i] ;
    cout << endl;
    
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
    cout << endl;

    mergesort(arr, 0, n - 1);

    cout << "Sorted Array: ";
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
    cout << endl;

    return 0;
}
